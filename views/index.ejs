<!DOCTYPE html>
<html>
<head>
	<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/vue/1.0.25/vue.js"></script>
	<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.0.0-rc1/jquery.min.js"></script>
	<link rel="stylesheet" type="text/css" href="style.css">
</head>

<body id="app">

	<div class="sidebar">
		<img src="logo.png">

		<div class="sideContent">
			<label>Output file name</label>
			<input type="text" name="fileName" id="fileName" placeholder="{{placeHolder}}" v-model="outfileName"></input>
			<label class="note">Defaults to turf_dddMDDYYYY.min.js</label>
			<label class="note">No need to include the file extension (eg .min.js)</label>
			<div v-if="selectedModules.length > 0">
				<button id="createBuild" v-on:click="getDownload">Build</button>
			</div>
			<div v-else>
				<button id="createBuild" disabled>Build</button>
				<p class="warning">Please select a few modules.</p>
			</div>

			<p id="versionNumber">Currently using <a target="_blank" href="https://github.com/Turfjs/turf/tree/v{{turfVersion}}">Turf {{turfVersion}}</a></p>

		</div>
	</div>	
	<div class="modules">
		<h3>Available modules</h3>
		<ul id="modulesList">
			<li v-for="item in turfModules">
				<input type="checkbox" name="{{item}}" value="{{item}}" v-model="selectedModules">{{ item }}
			</li>
		</ul>
		<div v-if="processing">
			<div class="spinner">
				<div class="double-bounce1"></div>
				<div class="double-bounce2"></div>
			</div>
			<p class="processingText">Just processing your request...</p>
		</div>
	</div>

</body>
<script>
	var vm = new Vue({
		el: '#app',
		data: {
			turfVersion: "<%= turfVersion %>",
			turfModulesRaw: "<%= turfModules %>",
			placeHolder: "turf_" + new Date().toDateString().split(' ').join(''),
			selectedModules: [],
			outfileName: null,
			processing: false
		},
		computed: {
			turfModules: function () {
				return this.turfModulesRaw.split(',')
			},
			selectedModulesString: function () {
				return this.selectedModules.toString()
			},
			finalOutFileName: function () {
				if (typeof this.outfileName == 'undefined' || this.outfileName == null || this.outfileName == ''){
					return this.placeHolder;
				}
				else {
					return this.outfileName;
				}
			}
		},
		methods: {
			getDownload: function () {
				var vm = this;
				this.processing = true;
				if(this.selectedModules.length > 0 ){
					$.post("build",
					{
						modules: this.selectedModulesString,
						fn: this.finalOutFileName
					},
					function(data, status){
						
						var textFileAsBlob = new Blob([data], {type:'text/plain'});
						var fileNameToSaveAs = vm.finalOutFileName+'.min.js';

						var downloadLink = document.createElement("a");
						document.body.appendChild(downloadLink);
						downloadLink.setAttribute("type", "hidden");
						downloadLink.download = fileNameToSaveAs;
						downloadLink.href = window.URL.createObjectURL(textFileAsBlob);
						downloadLink.innerHTML = "Download File";
						downloadLink.click();
						vm.processing = false;
					});
				}
			}
		}
	})
</script>
<script>
	(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
		(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
		m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

	ga('create', 'UA-69009460-1', 'auto');
	ga('send', 'pageview');

</script>
</html>